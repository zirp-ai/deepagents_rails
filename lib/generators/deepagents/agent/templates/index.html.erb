<%# DeepAgents <%= class_name %> Agent Interface %>

<div class="deepagents-container">
  <div class="deepagents-header">
    <h1><%= class_name %> Agent</h1>
    <p>Ask a question or provide instructions to interact with the agent.</p>
  </div>
  
  <div class="deepagents-conversation" id="conversation">
    <% if @messages.present? %>
      <% @messages.each do |message| %>
        <div class="message <%= message[:role] %>">
          <div class="message-content">
            <%= simple_format(message[:content]) %>
          </div>
          <div class="message-timestamp">
            <%= message[:timestamp].strftime("%H:%M") %>
          </div>
        </div>
      <% end %>
    <% else %>
      <div class="empty-state">
        <p>No messages yet. Start a conversation with the agent.</p>
      </div>
    <% end %>
  </div>
  
  <%= form_with url: deepagents_<%= file_name %>_index_path, method: :post, class: "deepagents-input-form", id: "agent-form", data: { remote: true } do |f| %>
    <div class="input-container">
      <%= f.text_area :input, placeholder: "Type your message here...", rows: 3, class: "deepagents-input", id: "agent-input" %>
      
      <div class="file-upload-container">
        <%= f.file_field :files, multiple: true, class: "file-input", id: "file-upload" %>
        <label for="file-upload" class="file-upload-button">
          <i class="fa fa-paperclip"></i> Attach Files
        </label>
      </div>
      
      <%= f.submit "Send", class: "send-button", id: "send-button" %>
    </div>
  <% end %>
</div>

<style>
  .deepagents-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  }
  
  .deepagents-header {
    margin-bottom: 20px;
    text-align: center;
  }
  
  .deepagents-conversation {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    padding: 15px;
    height: 400px;
    overflow-y: auto;
    margin-bottom: 20px;
    background-color: #f9f9f9;
  }
  
  .message {
    margin-bottom: 15px;
    padding: 10px 15px;
    border-radius: 8px;
    max-width: 80%;
  }
  
  .message.user {
    background-color: #e1f5fe;
    margin-left: auto;
  }
  
  .message.assistant {
    background-color: #f0f0f0;
    margin-right: auto;
  }
  
  .message-timestamp {
    font-size: 0.8em;
    color: #888;
    text-align: right;
    margin-top: 5px;
  }
  
  .input-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .deepagents-input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 8px;
    resize: none;
  }
  
  .file-upload-container {
    display: flex;
    align-items: center;
  }
  
  .file-input {
    display: none;
  }
  
  .file-upload-button {
    display: inline-block;
    padding: 8px 12px;
    background-color: #f0f0f0;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9em;
  }
  
  .send-button {
    padding: 10px 20px;
    background-color: #2196f3;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-weight: bold;
  }
  
  .send-button:hover {
    background-color: #1976d2;
  }
  
  .empty-state {
    text-align: center;
    color: #888;
    padding: 40px 0;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('agent-form');
    const input = document.getElementById('agent-input');
    const conversation = document.getElementById('conversation');
    
    form.addEventListener('ajax:success', function(event) {
      const [data, status, xhr] = event.detail;
      
      // Add user message
      const userMessage = document.createElement('div');
      userMessage.className = 'message user';
      userMessage.innerHTML = `
        <div class="message-content">${input.value.replace(/\n/g, '<br>')}</div>
        <div class="message-timestamp">${new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</div>
      `;
      conversation.appendChild(userMessage);
      
      // Add assistant message
      const assistantMessage = document.createElement('div');
      assistantMessage.className = 'message assistant';
      assistantMessage.innerHTML = `
        <div class="message-content">${data.response.replace(/\n/g, '<br>')}</div>
        <div class="message-timestamp">${new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</div>
      `;
      conversation.appendChild(assistantMessage);
      
      // Clear input
      input.value = '';
      
      // Scroll to bottom
      conversation.scrollTop = conversation.scrollHeight;
    });
  });
</script>
